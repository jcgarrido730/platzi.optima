Curso de Python: Comprehensions, Funciones y Manejo de Errores

1. ¿Cuál de los siguientes es un principio de The Zen of Python?
Plano es mejor que anidado.

2. ¿Cuál de los siguientes es un principio de The Zen of Python?
Bello es mejor que feo.

3. ¿Cuál de las siguientes es una propiedad principal CORRECTA de los Sets o Conjuntos en Python?
No pueden tener duplicados.

4. Tienes un set o conjunto de Python almacenado en la variable trips. ¿Cómo obtienes su cantidad de elementos?
len(trips)

5. ¿Cuál es la diferencia entre remove y discard al trabajar con Sets o Conjuntos en Python?
Si el elemento que eliminamos no existe en el conjunto, remove da error, discard no.

6. Dado el siguiente bloque de código:
n = []
for i in range(1, 6):
	if i <= 2: 
		n.append(i - 1)
¿Cuál de las siguientes respuestas con List Comprehension nos peermite obtener el mismo resultad con una sintaxis más corta?
n = [i - 1 for i in range(1,6) if i <= 2]

7. Dado el siguiente bloque de código:
d = {}
for e in range(1, 6):
	if e <= 2:
		d[e] = e -1 
¿Cuál de las siguientes respuestas con Dictionary Comprehension nos permite obtener el mismo resultad con una sintaxis más corta?
d = { e: e - 1 for e in range(1,6) if e <= 2 }

8. ¿Cuál de las siguientes estructuras de datos es mutable?
List

9. ¿Cuál de las siguientes estructuras de datos nos permite ordenar sus elementos?
Tuple

10. ¿Cuál de las siguientes estructuras de datos NO nos permite duplicar elementos?
Set

11.¿Cuál es la palabra clave reservada para crear una función en Python?
def

12. ¿Cuál es la forma correcta de crear una función en Python?
def nombre_func:
	# …

13. Creaste una función sum que recibe 2 parámetros y los suma entre ellos. Ahora debes almacenar el resultado de esas sumas en un conjunto. ¿Cómo lo harias?
def sum(a, b):
	result = a + b
	print(result)
	return result

sum_set = {}

sum_set.add(sum(1, 2))
sum_set.add(sum(3, 4))

14. Dado el siguiente bloque de código:
def sum(a = 1, b = 0):
  return a + b
¿Cómo enviarías únicamente el valor de b para realizar la suma usando el valor por defecto de a?
sum(b=5)

15. La función sum(a,b) retorna 3 elementos: 1) la suma entre a y b; 2) a; y 3) b.
Debes guardar los 3 elementos retornados en nuevas variables por fuera de la función.
¿Cómo lo harías?

result, a, b = sum(1,2)

16. ¿Cuál de las siguientes afirmaciones sobre las funciones lambda es correcta?
Es posible enviar funciones lambda como argumento de otras funciones (higher order functions).

17. ¿Cuál de las siguientes funciones SIEMPRE devuelve la misma cantidad de elementos de la lista original?
map

18. ¿La función Map en Python puede procesar dos listas al mismo tiempo?
Sí, pero solo iterará en ambas listas hasta la cantidad de elementos de la lista más pequeña.

19. ¿Cómo se importa el módulo functools (nativo de Python)?
import functools

20. Creaste una función sum dentro del archivo math.py. Ahora desde el archivo main.py (en la misma carpeta que math.py) debes importar ese módulo y usar la función sum. ¿Cómo lo harías?
import math math.sum(1,2)

21. ¿Cuál es la función del siguinte bloque de código: if __name__ == '__main__'?
Nos informa si el archivo se está ejecutando como script o como módulo.

22. Dado el siguiente bloque de código: print(10 / user_option). Y siendo user_option una variable que puede recibir cualquier valor numérico (incluyendo 0). ¿Cómo manejarías la excepción de división sobre cero para que el código siga ejecutando a pesar del error?
try:
	print(10 / user_option)
except ZeroDivisionError as error:
	print(error) ```
	
23. ¿Cuál es la principal característica de una función Lambda o anónima?
Que no tiene nombre y ejecutan una sola expresión.

24. ¿Qué uso se le da al método map() de Python?
Aplica una función sobre todos los elementos de un iterable y devuelve otro iterable tipo map.
